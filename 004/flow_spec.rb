require 'rspec'
require_relative './flow'

class String
  def unindent
    gsub(/^#{scan(/^\s*/).min_by{|l|l.length}}/, "").chomp!
  end
end

describe 'simple cave' do
  SIMPLE_CAVE = <<-END.unindent
    ################################
    ~                              #
    #         ####                 #
    ###       ####                ##
    ###       ####              ####
    #######   #######         ######
    #######   ###########     ######
    ################################
  END

  example 'after 7 iterations' do
    flow(7, SIMPLE_CAVE).to_s.should == <<-END.unindent
      ################################
      ~~                             #
      #~~~      ####                 #
      ###~      ####                ##
      ###~      ####              ####
      #######   #######         ######
      #######   ###########     ######
      ################################
    END
  end

  example 'after 15 iterations' do
    flow(15, SIMPLE_CAVE).to_s.should == <<-END.unindent
      ################################
      ~~                             #
      #~~~      ####                 #
      ###~      ####                ##
      ###~~~~~  ####              ####
      #######~  #######         ######
      #######~~~###########     ######
      ################################
    END
  end

  example 'after 45 iterations' do
    flow(45, SIMPLE_CAVE).to_s.should == <<-END.unindent
      ################################
      ~~~~~~~~~~~~~~~                #
      #~~~~~~~~~####~                #
      ###~~~~~~~####                ##
      ###~~~~~~~####              ####
      #######~~~#######         ######
      #######~~~###########     ######
      ################################
    END
  end

  example 'after 200 iterations (more than available spaces)' do
    flow(200, SIMPLE_CAVE).to_s.should == <<-END.unindent
      ################################
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
      #~~~~~~~~~####~~~~~~~~~~~~~~~~~#
      ###~~~~~~~####~~~~~~~~~~~~~~~~##
      ###~~~~~~~####~~~~~~~~~~~~~~####
      #######~~~#######~~~~~~~~~######
      #######~~~###########~~~~~######
      ################################
    END
  end
end